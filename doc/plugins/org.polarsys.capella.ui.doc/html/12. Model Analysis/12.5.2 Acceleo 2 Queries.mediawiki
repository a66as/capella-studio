= Legacy Model requests interpreter View and Acceleo 2 queries [deprecated] =
== Model Requests Interpreter View ==
Using the Model requests interpreter view, you can write and evaluate queries on model elements using the following languages:
<ul>
<li>Acceleo 2,</li>
<li>AQL.</li>
</ul>
<br>
[[Image:Images/12_5_ Acceleo Queries_html_m22fce208.png|500x350px]]
 
<br>
In the following sections, we will describe the syntax of Acceleo 2 queries by providing some examples. For more information, have a look at the Acceleo 2.6 online reference guide.
<br>
== Acceleo 2: query examples ==
=== Basic Model Queries ===
{| width="879" border="1" cellpadding="7"
|- valign="TOP"
| width="249" |
'''Description'''
| width="156" |
'''Workbench Selection'''
| width="430" |
'''Syntax'''
|- valign="TOP"
| width="249" |
Current Element
| width="156" |
A model element
| width="430" |
&lt;%current%&gt;
|- valign="TOP"
| width="249" |
Container of current element
| width="156" |
A model element
| width="430" |
&lt;%current.eContainer%&gt;
|- valign="TOP"
| width="249" |
Type of an element
| width="156" |
A model element
| width="430" |
&lt;%current.eClass%&gt;
|- valign="TOP"
| width="249" |
Total number of elements in a model
| width="156" |
A model element
| width="430" |
&lt;%current.ancestor.nLast.eAllContents.nSize%&gt;
|- valign="TOP"
| width="249" |
Total number of sub-elements
| width="156" |
A model element
| width="430" |
&lt;%current.eAllContents.nSize%&gt;
|}
<br>
=== Diagram Queries ===
{| width="879" border="1" cellpadding="7"
|- valign="TOP"
| width="249" |
'''Description'''
| width="156" |
'''Workbench Selection'''
| width="430" |
'''Syntax'''
|- valign="TOP"
| width="249" |
Semantic element associated to a graphical element
| width="156" |
A diagram element
| width="430" |
&lt;%current.target%&gt;
|- valign="TOP"
| width="249" |
Number of diagrams
| width="156" |
A diagram element
| width="430" |
&lt;%(current.ancestor.referencedAnalysis current.ancestor 
current.ancestor.referencedAnalysis.referencedAnalysis 
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis current.ancestor.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis 
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis)
[eClass.name=="DAnalysis"].minimize.ownedViews.
ownedRepresentations.nSize()%&gt;
|- valign="TOP"
| width="249" |
Diagrams without Sequence diagram
| width="156" |
A diagram element
| width="430" |
&lt;%(current.ancestor.referencedAnalysis current.ancestor 
current.ancestor.referencedAnalysis.referencedAnalysis 
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis current.ancestor.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis 
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis)
[eClass.name=="DAnalysis"].minimize.ownedViews.
ownedRepresentations[description.name.endsWith("Scenario")==false]%&gt;
|- valign="TOP"
| width="249" |
List of different viewpoints
| width="156" |
A diagram element
| width="430" |
&lt;%(current.ancestor.referencedAnalysis current.ancestor 
current.ancestor.referencedAnalysis.referencedAnalysis 
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis current.ancestor.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis 
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis)
[eClass.name=="DAnalysis"].ownedViews.viewpoint.nMinimize()%&gt;
|- valign="TOP"
| width="249" |
Number of graphical elements in all diagrams
| width="156" |
A diagram element
| width="430" |
&lt;%(current.ancestor.referencedAnalysis current.ancestor 
current.ancestor.referencedAnalysis.referencedAnalysis 
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis current.ancestor.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis 
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis)
[eClass.name=="DAnalysis"].minimize.ownedViews.
ownedRepresentations.diagramElements.nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of graphical elements in all diagrams (including technical elements like style, color…)
| width="156" |
A diagram element
| width="430" |
&lt;%(current.ancestor.referencedAnalysis current.ancestor 
current.ancestor.referencedAnalysis.referencedAnalysis 
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis current.ancestor.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis 
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis)
[eClass.name=="DAnalysis"].minimize.eAllContents.nSize()%&gt;
|}
<br>
=== Searching Strings ===
{| width="879" border="1" cellpadding="7"
|- valign="TOP"
| width="249" |
'''Description'''
| width="156" |
'''Workbench Selection'''
| width="430" |
'''Syntax'''
|- valign="TOP"
| width="249" |
All element containing the "TODO" string in their 'Name' property
| width="156" |
A model element
| width="430" |
&lt;%current.eAllContents()[name.matches(".*TODO.*")]%&gt;
|- valign="TOP"
| width="249" |
All element containing the "TODO" string in their 'Summary' property
| width="156" |
A model element
| width="430" |
&lt;%current.eAllContents()[summary.matches(".*TODO.*")]%&gt;
|- valign="TOP"
| width="249" |
All element containing the "TODO" string in their 'Description' property
| width="156" |
A model element
| width="430" |
&lt;%current.eAllContents()[description.matches(".*TODO.*")]%&gt;
|- valign="TOP"
| width="249" |
All diagrams containing a note containing the "TODO" string
| width="156" |
A diagram element
| width="430" |
&lt;%(current.ancestor.referencedAnalysis current.ancestor
current.ancestor.referencedAnalysis.referencedAnalysis
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis current.ancestor.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis)
[eClass.name=="DAnalysis"].minimize.
ownedViews.ownedRepresentations
[~element.filter("notation.Diagram").eAllContents("notation.Node")
[type=="Note" &amp;&amp; description.indexOf("TODO")&gt;=0]]%&gt;
|- valign="TOP"
| width="249" |
Number of notes containing the "TODO" string
| width="156" |
A diagram element
| width="430" |
&lt;%(current.ancestor.referencedAnalysis current.ancestor
current.ancestor.referencedAnalysis.referencedAnalysis
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis current.ancestor.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis
current.ancestor.referencedAnalysis.referencedAnalysis.
referencedAnalysis.referencedAnalysis.referencedAnalysis)
[eClass.name=="DAnalysis"].minimize.ownedViews.
ownedRepresentations[~element.filter("notation.Diagram").
eAllContents("notation.Node")[type=="Note" &amp;&amp; description.indexOf("TODO")&gt;=0]].nSize()%&gt;
|}
<br>
=== Requirements ===
{| width="879" border="1" cellpadding="7"
|- valign="TOP"
| width="249" |
'''Description'''
| width="156" |
'''Workbench Selection'''
| width="430" |
'''Syntax'''
|- valign="TOP"
| width="249" |
Query to retrieve the list of non-allocated requirements
| width="156" |
Requirement Package
| width="430" |
&lt;%current.eAllContents[relatedCapellaElements==null]%
|}
<br>
=== Model Navigation Examples ===
{| width="879" border="1" cellpadding="7"
|- valign="TOP"
| width="249" |
'''Description'''
| width="156" |
'''Workbench Selection'''
| width="430" |
'''Syntax'''
|- valign="TOP"
| width="249" |
List of functions allocated to a component
| width="156" |
Any Component
| width="430" |
&lt;%current.allocatedFunctions%&gt;
|- valign="TOP"
| width="249" |
List of sub logical components
| width="156" |
Any Logical Component
| width="430" |
&lt;%current.subLogicalComponents%&gt;
|- valign="TOP"
| width="249" |
List of all functions
- having more than 3 ports
- allocated to one given component
- Which name starts with "Store"
| width="156" |
Any Component
| width="430" |
&lt;%current.allocatedFunctions[name.startsWith("Store") &amp;&amp; eAllContents().filter("FunctionPort").nSize&gt;3]%&gt;
|}
<br>
=== Metrics ===
{| width="879" border="1" cellpadding="7"
|- valign="TOP"
| width="249" |
'''Description'''
| width="156" |
'''Workbench Selection'''
| width="430" |
'''Syntax'''
|- valign="TOP"
| width="249" |
Number of XXXX owned by the selected element, where XXXX is the type of a model element (&lt;%current.eClass%&gt; )
| width="156" |
A model element
| width="430" |
&lt;%current.eAllContents("XXXX").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Operational Activities
| width="156" |
OperationalAnalysis
| width="430" |
&lt;%current.eAllContents("OperationalActivity").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Operational Interactions
| width="156" |
OperationalAnalysis
| width="430" |
&lt;%current.eAllContents("FunctionalExchange").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Exchange Items in OA
| width="156" |
OperationalAnalysis
| width="430" |
&lt;%current.eAllContents("AbstractExchangeItem").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Types (Classes, Datatypes) in OA
| width="156" |
OperationalAnalysis
| width="430" |
&lt;%current.eAllContents("DataType").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Classes in OA
| width="156" |
OperationalAnalysis
| width="430" |
&lt;%current.eAllContents("Class").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of States or Modes in OA
| width="156" |
OperationalAnalysis
| width="430" |
&lt;%(current.eAllContents().filter("State") - current.eAllContents().filter("Mode")).nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Operational Entities
| width="156" |
OperationalAnalysis
| width="430" |
&lt;%(current.eAllContents("Entity")-current.eAllContents("OperationalActor")).nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Operational Actors
| width="156" |
OperationalAnalysis
| width="430" |
&lt;%current.eAllContents("OperationalActor").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Operational Roles
| width="156" |
OperationalAnalysis
| width="430" |
&lt;%current.eAllContents("Role").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Communication Means
| width="156" |
OperationalAnalysis
| width="430" |
&lt;%current.eAllContents("CommunicationMean").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of System Functions
| width="156" |
SystemAnalysis
| width="430" |
&lt;%current.eAllContents("SystemFunction").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Functional Exchanges in SA
| width="156" |
SystemAnalysis
| width="430" |
&lt;%current.eAllContents("FunctionalExchange").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Function Ports in SA
| width="156" |
SystemAnalysis
| width="430" |
&lt;%current.eAllContents().filter("FunctionPort").nSize%&gt;
|- valign="TOP"
| width="249" |
Number of System Actors
| width="156" |
SystemAnalysis
| width="430" |
&lt;%current.eAllContents("Actor").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Functional Chains in SA
| width="156" |
SystemAnalysis
| width="430" |
&lt;%current.eAllContents("FunctionalChain").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Scenarios in SA
| width="156" |
SystemAnalysis
| width="430" |
&lt;%current.eAllContents("Scenario").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Behaviour Components in PA
| width="156" |
PhysicalArchitecture
| width="430" |
&lt;%current.eAllContents("PhysicalComponent")
[nature=="BEHAVIOR"].nSize%&gt;
|- valign="TOP"
| width="249" |
Number of Implementation PC (nodes) in PA
| width="156" |
PhysicalArchitecture
| width="430" |
&lt;%current.eAllContents("PhysicalComponent")
[nature=="NODE"].nSize%&gt;
|- valign="TOP"
| width="249" |
Number of Physical Links
| width="156" |
PhysicalArchitecture
| width="430" |
&lt;%current.eAllContents("PhysicalLink").nSize()%&gt;
|- valign="TOP"
| width="249" |
Number of Physical Ports
| width="156" |
PhysicalArchitecture
| width="430" |
&lt;%current.eAllContents("PhysicalPort").nSize()%&gt;
|}
<br>
=== Advanced Queries ===
With Acceleo, you can navigate in elements following references and attributes:
<%current.outgoing%> on a SystemFunction will retrieve outgoing functional exchanges:<br><br>
[[Image:Images/12_5_ Acceleo Queries_html_51a25b.png|500x150px]]<br>
<br>
There is many way to retrieve which references to use for an element. These references ca be used in a request like the above outgoing reference.
For instance, you can retrieve references with Acceleo using the following request:
<%current.eClass.eAllReferences%> (or current.eClass.eAllAttributes to retrieve attributes)
<br><br>
[[Image:Images/12_5_ Acceleo Queries_html_m4a26b2e2.png|550x300px]]<br>
<br>
One easiest way to retrieve references or attributes is to open the Properties View and go the Expert tab then choose relevant references/attributes for your query
<br><br>
[[Image:Images/12_5_ Acceleo Queries_html_m44230212.png|800x250px]]<br><br>
You just have to write the reference name in a camelCaseFormat to use it with Acceleo (e.g. Available In States => availableInStates)
 
